---
import clsx from "clsx";
import { cn } from "../../utils/cn";

interface Props {
  current?: boolean;
  className?: string;
  href?: string;
}

const { current, className, href, ...props } = Astro.props;

const classes = clsx(
  // Base
  "relative flex min-w-0 items-center gap-3 rounded-full p-2 px-3.5 text-left text-base/6 font-medium text-zinc-950 sm:text-sm/5",
  // Leading icon/icon-only
  "data-[slot=icon]:*:size-6 data-[slot=icon]:*:shrink-0 data-[slot=icon]:*:fill-zinc-500 sm:data-[slot=icon]:*:size-5",
  // Trailing icon (down chevron or similar)
  "data-[slot=icon]:last:[&:not(:nth-child(2))]:*:ml-auto data-[slot=icon]:last:[&:not(:nth-child(2))]:*:size-5 sm:data-[slot=icon]:last:[&:not(:nth-child(2))]:*:size-4",
  // Avatar
  "data-[slot=avatar]:*:-m-0.5 data-[slot=avatar]:*:size-7 data-[slot=avatar]:*:[--avatar-radius:theme(borderRadius.DEFAULT)] data-[slot=avatar]:*:[--ring-opacity:10%] sm:data-[slot=avatar]:*:size-6",
  // Hover
  "hover:bg-zinc-950/5 data-[slot=icon]:*:hover:fill-zinc-950",
  // Active
  "active:bg-zinc-950/5 data-[slot=icon]:*:active:fill-zinc-950",
  // Dark mode
  "dark:text-white dark:data-[slot=icon]:*:fill-zinc-400",
  "dark:hover:bg-white/5 dark:data-[slot=icon]:*:hover:fill-white",
  "dark:active:bg-white/5 dark:data-[slot=icon]:*:active:fill-white",
);
---

<span class={cn(className, "relative")}>
  {
    current && (
      <span class="absolute inset-x-2 -bottom-2.5 h-0.5 rounded-full bg-zinc-950 dark:bg-white" />
    )
  }

  {
    href ? (
      <a
        href={href}
        class={classes}
        data-current={current ? "true" : undefined}
        {...props}
      >
        <slot />
      </a>
    ) : (
      <button
        class={cn("cursor-default", classes)}
        data-current={current ? "true" : undefined}
        {...props}
      >
        <slot />
      </button>
    )
  }
</span>
